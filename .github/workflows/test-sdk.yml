name: Generate SDK

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: [test-sdk-generation]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install-and-cache:
    name: Run install and cache
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cached-node-modules-root
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-root-${{ hashFiles('package-lock.json') }}

      - name: Install root dependencies
        if: steps.cached-node-modules-root.outputs.cache-hit != 'true'
        # We use --ignore-scripts flag to ignore the postinstall script which is actually installing dependencies in all other apps.
        # Caution! The option --ignore-scripts disables ALL scripts - even from the dependencies. If the dependencies need to run scripts to e.g. install some binaries they may break / be incomplete. For now this works and if we experience some issues we can try to find better solution.
        run: npm install --ignore-scripts

      - name: Cache backend node_modules
        id: cached-node-modules-backend
        uses: actions/cache@v3
        with:
          path: apps/user-office-backend/node_modules
          key: node-modules-backend-${{ hashFiles('apps/user-office-backend/package-lock.json') }}

      - name: Install backend dependencies
        if: steps.cached-node-modules-backend.outputs.cache-hit != 'true'
        run: npm run install:backend

      - name: Cache frontend node_modules
        id: cached-node-modules-frontend
        uses: actions/cache@v3
        with:
          path: apps/user-office-frontend/node_modules
          key: node-modules-frontend-${{ hashFiles('apps/user-office-frontend/package-lock.json') }}

      - name: Install frontend dependencies
        if: steps.cached-node-modules-frontend.outputs.cache-hit != 'true'
        run: npm run install:frontend
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [install-and-cache]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore node_modules
        id: cached-node-modules-root
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-root-${{ hashFiles('package-lock.json') }}

      - name: Restore backend node_modules
        id: cached-node-modules-backend
        uses: actions/cache@v3
        with:
          path: apps/user-office-backend/node_modules
          key: node-modules-backend-${{ hashFiles('apps/user-office-backend/package-lock.json') }}

      - name: Restore frontend node_modules
        id: cached-node-modules-frontend
        uses: actions/cache@v3
        with:
          path: apps/user-office-frontend/node_modules
          key: node-modules-frontend-${{ hashFiles('apps/user-office-frontend/package-lock.json') }}
          
      - name: Generate SDK
        run:  cp apps/user-office-frontend/example.development.env apps/user-office-frontend/.env

      - name: Generate SDK
        run: npm run generate:sdk
