image: node:10

stages:
  - test
  - build-test
  - build
  - autodeploy

test:
  stage: test
  script:
    - npm install
    - NODE_ENV=ci npm run test
  tags:
    - docker

build-test:
  stage: build-test
  script:
    - npm install --only=production
    - npm run tsc
  tags:
    - docker
  except:
    - develop

.docker build:
  image: docker:stable
  script:
    - docker info
    - docker build . -t dmsc/duo-backend:$TAG
    - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin
    - docker push dmsc/duo-backend
  tags:
    - docker

.docker build-develop:
  stage: build
  extends: .docker build
  variables:
    TAG: latest
  only:
    - develop

.docker build-feature:
  stage: build
  extends: .docker build
  variables:
    TAG: $CI_COMMIT_BRANCH
  except:
    - develop

autodeploy:
  image: ubuntu:latest
  stage: autodeploy
  script:
    - echo $CI_COMMIT_SHA
    - apt-get update -qq
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY_GEN")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - until ssh jekabskarklins@scicat09.esss.lu.se "/home/jekabskarklins/duo-kubernetes/backend/autodeploy.sh dev"; do sleep 5; done
  tags:
    - dind
  only:
    - develop
